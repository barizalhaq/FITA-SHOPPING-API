// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/promo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/barizalhaq/fita_shopping_api/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockPromoUsecaseInterface is a mock of PromoUsecaseInterface interface.
type MockPromoUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPromoUsecaseInterfaceMockRecorder
}

// MockPromoUsecaseInterfaceMockRecorder is the mock recorder for MockPromoUsecaseInterface.
type MockPromoUsecaseInterfaceMockRecorder struct {
	mock *MockPromoUsecaseInterface
}

// NewMockPromoUsecaseInterface creates a new mock instance.
func NewMockPromoUsecaseInterface(ctrl *gomock.Controller) *MockPromoUsecaseInterface {
	mock := &MockPromoUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockPromoUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPromoUsecaseInterface) EXPECT() *MockPromoUsecaseInterfaceMockRecorder {
	return m.recorder
}

// Promos mocks base method.
func (m *MockPromoUsecaseInterface) Promos() ([]domain.Promo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Promos")
	ret0, _ := ret[0].([]domain.Promo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Promos indicates an expected call of Promos.
func (mr *MockPromoUsecaseInterfaceMockRecorder) Promos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Promos", reflect.TypeOf((*MockPromoUsecaseInterface)(nil).Promos))
}

// MockPromoRepositoryInterface is a mock of PromoRepositoryInterface interface.
type MockPromoRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPromoRepositoryInterfaceMockRecorder
}

// MockPromoRepositoryInterfaceMockRecorder is the mock recorder for MockPromoRepositoryInterface.
type MockPromoRepositoryInterfaceMockRecorder struct {
	mock *MockPromoRepositoryInterface
}

// NewMockPromoRepositoryInterface creates a new mock instance.
func NewMockPromoRepositoryInterface(ctrl *gomock.Controller) *MockPromoRepositoryInterface {
	mock := &MockPromoRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockPromoRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPromoRepositoryInterface) EXPECT() *MockPromoRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetPromos mocks base method.
func (m *MockPromoRepositoryInterface) GetPromos() ([]domain.Promo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPromos")
	ret0, _ := ret[0].([]domain.Promo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPromos indicates an expected call of GetPromos.
func (mr *MockPromoRepositoryInterfaceMockRecorder) GetPromos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPromos", reflect.TypeOf((*MockPromoRepositoryInterface)(nil).GetPromos))
}
